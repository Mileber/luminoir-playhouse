{"version":3,"file":"KlotskiGame-vXF2jKxA.js","sources":["../../src/components/games/KlotskiGame.vue"],"sourcesContent":["<template>\n  <div class=\"klotski-game\">\n    <div class=\"container\">\n      <h1>华容道</h1>\n      <div class=\"game-info\">\n        <div class=\"moves\">步数: {{ moves }}</div>\n        <div class=\"controls\">\n          <button @click=\"initGame\" class=\"restart-btn\">重新开始</button>\n        </div>\n      </div>\n      \n      <div class=\"game-board\" ref=\"gameBoard\">\n        <div \n          v-for=\"(row, rowIndex) in board\" \n          :key=\"rowIndex\"\n          class=\"board-row\"\n        >\n          <div \n            v-for=\"(cell, colIndex) in row\" \n            :key=\"colIndex\"\n            class=\"cell\"\n            :class=\"getCellClass(cell)\"\n          >\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"gameCompleted\" class=\"game-completed\">\n        <h2>恭喜你完成了华容道！</h2>\n        <p>总共用了 {{ moves }} 步</p>\n        <button @click=\"initGame\" class=\"play-again-btn\">再玩一次</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, onMounted } from 'vue'\n\n// 定义组件名称\ndefineOptions({\n  name: 'KlotskiGame'\n})\n\n// 游戏常量\nconst BOARD_ROWS = 5\nconst BOARD_COLS = 4\n\n// 方块类型枚举\nenum BlockType {\n  EMPTY = 0,\n  CAOCAO = 1,     // 2x2曹操方块\n  GENERAL_V = 2,  // 1x2竖直大将方块\n  GENERAL_H = 3,  // 1x2水平大将方块\n  SOLDIER = 4     // 1x1士兵方块\n}\n\n// 方块接口\ninterface Block {\n  id: number\n  type: BlockType\n  row: number\n  col: number\n}\n\n// 游戏状态\nconst board = ref<number[][]>([])\nconst blocks = reactive<Block[]>([])\nconst moves = ref(0)\nconst gameCompleted = ref(false)\nconst selectedBlock = ref<number | null>(null)\n\n// 初始化游戏\nconst initGame = () => {\n  // 重置游戏状态\n  moves.value = 0\n  gameCompleted.value = false\n  selectedBlock.value = null\n  \n  // 清空游戏板\n  board.value.length = 0\n  \n  // 初始化空的游戏板\n  for (let row = 0; row < BOARD_ROWS; row++) {\n    const rowCells: number[] = []\n    for (let col = 0; col < BOARD_COLS; col++) {\n      rowCells.push(BlockType.EMPTY)\n    }\n    board.value.push(rowCells)\n  }\n  \n  // 清空方块\n  blocks.length = 0\n  \n  // 初始化经典\"横刀立马\"布局\n  // 第一行\n  blocks.push({ id: 1, type: BlockType.GENERAL_V, row: 0, col: 0 })  // 关羽\n  blocks.push({ id: 2, type: BlockType.GENERAL_V, row: 0, col: 1 })  // 张飞\n  blocks.push({ id: 3, type: BlockType.GENERAL_V, row: 0, col: 2 })  // 赵云\n  blocks.push({ id: 4, type: BlockType.GENERAL_V, row: 0, col: 3 })  // 马超\n  \n  // 第二行\n  blocks.push({ id: 5, type: BlockType.GENERAL_H, row: 1, col: 0 })  // 黄忠\n  blocks.push({ id: 6, type: BlockType.CAOCAO, row: 1, col: 1 })     // 曹操\n  blocks.push({ id: 7, type: BlockType.SOLDIER, row: 1, col: 3 })    // 士兵\n  \n  // 第三行\n  blocks.push({ id: 8, type: BlockType.SOLDIER, row: 2, col: 0 })    // 士兵\n  blocks.push({ id: 9, type: BlockType.SOLDIER, row: 2, col: 1 })    // 士兵\n  blocks.push({ id: 10, type: BlockType.GENERAL_H, row: 2, col: 2 }) // 关羽\n  \n  // 第四行\n  blocks.push({ id: 11, type: BlockType.GENERAL_V, row: 3, col: 0 }) // 赵云\n  blocks.push({ id: 12, type: BlockType.GENERAL_V, row: 3, col: 1 }) // 马超\n  blocks.push({ id: 13, type: BlockType.GENERAL_H, row: 3, col: 2 }) // 黄忠\n  \n  // 第五行\n  blocks.push({ id: 14, type: BlockType.SOLDIER, row: 4, col: 0 })   // 士兵\n  blocks.push({ id: 15, type: BlockType.SOLDIER, row: 4, col: 3 })   // 士兵 (出口位置)\n  \n  // 更新游戏板\n  updateBoard()\n}\n\n// 更新游戏板\nconst updateBoard = () => {\n  // 清空游戏板\n  for (let row = 0; row < BOARD_ROWS; row++) {\n    if (!board.value[row]) continue;\n    for (let col = 0; col < BOARD_COLS; col++) {\n      // @ts-expect-error 确保访问是安全的\n      if (col < board.value[row].length) {\n        // @ts-expect-error 确保访问是安全的\n        board.value[row][col] = BlockType.EMPTY\n      }\n    }\n  }\n  \n  // 绘制所有方块\n  for (const block of blocks) {\n    drawBlock(block)\n  }\n}\n\n// 绘制单个方块\nconst drawBlock = (block: Block) => {\n  const { type, row, col } = block\n  \n  switch (type) {\n    case BlockType.CAOCAO: // 2x2方块\n      if (board.value[row] && col < board.value[row].length) {\n        board.value[row][col] = block.id\n      }\n      if (board.value[row] && (col + 1) < board.value[row].length) {\n        board.value[row][col + 1] = block.id\n      }\n      // 检查边界和数组访问安全性\n      // @ts-expect-error 确保访问是安全的\n      if (row + 1 < BOARD_ROWS && board.value[row + 1] && col < board.value[row + 1].length && (col + 1) < board.value[row + 1].length) {\n        // @ts-expect-error 确保访问是安全的\n        board.value[row + 1][col] = block.id\n        // @ts-expect-error 确保访问是安全的\n        board.value[row + 1][col + 1] = block.id\n      }\n      break\n      \n    case BlockType.GENERAL_V: // 2x1竖直方块\n      if (board.value[row] && col < board.value[row].length) {\n        board.value[row][col] = block.id\n      }\n      // 检查边界和数组访问安全性\n      // @ts-expect-error 确保访问是安全的\n      if ((row + 1) < BOARD_ROWS && board.value[row + 1] && col < board.value[row + 1].length) {\n        // @ts-expect-error 确保访问是安全的\n        board.value[row + 1][col] = block.id\n      }\n      break\n      \n    case BlockType.GENERAL_H: // 1x2水平方块\n      if (board.value[row] && col < board.value[row].length) {\n        board.value[row][col] = block.id\n      }\n      if (board.value[row] && (col + 1) < board.value[row].length) {\n        board.value[row][col + 1] = block.id\n      }\n      break\n      \n    case BlockType.SOLDIER: // 1x1方块\n      if (board.value[row] && col < board.value[row].length) {\n        board.value[row][col] = block.id\n      }\n      break\n  }\n}\n\n// 获取单元格类名\nconst getCellClass = (cellValue: number) => {\n  if (cellValue === BlockType.EMPTY) {\n    return 'empty'\n  }\n  \n  // 根据方块ID找到对应的方块类型\n  const block = blocks.find((b: Block) => b.id === cellValue)\n  if (!block) return 'empty'\n  \n  switch (block.type) {\n    case BlockType.CAOCAO:\n      return `block caocao block-${cellValue}`\n    case BlockType.GENERAL_V:\n      return `block general-v block-${cellValue}`\n    case BlockType.GENERAL_H:\n      return `block general-h block-${cellValue}`\n    case BlockType.SOLDIER:\n      return `block soldier block-${cellValue}`\n    default:\n      return 'empty'\n  }\n}\n\n// 组件挂载时初始化游戏\nonMounted(() => {\n  initGame()\n})\n</script>\n\n<style scoped>\n.klotski-game {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.moves {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.controls {\n  display: flex;\n  gap: 10px;\n}\n\nbutton {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.restart-btn, .play-again-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.game-board {\n  display: inline-block;\n  border: 2px solid #333;\n  background-color: #f0f0f0;\n  margin-bottom: 20px;\n}\n\n.board-row {\n  display: flex;\n}\n\n.cell {\n  width: 60px;\n  height: 60px;\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n}\n\n.empty {\n  background-color: #f0f0f0;\n}\n\n.block {\n  border: 1px solid #333;\n  cursor: pointer;\n}\n\n.caocao {\n  background-color: #ffeb3b;\n  width: 120px;\n  height: 120px;\n}\n\n.general-v {\n  background-color: #4caf50;\n  width: 60px;\n  height: 120px;\n}\n\n.general-h {\n  background-color: #2196f3;\n  width: 120px;\n  height: 60px;\n}\n\n.soldier {\n  background-color: #ff9800;\n  width: 60px;\n  height: 60px;\n}\n\n.game-completed {\n  text-align: center;\n  padding: 20px;\n  background-color: #e8f5e9;\n  border-radius: 8px;\n}\n\n.game-completed h2 {\n  margin-top: 0;\n  color: #2e7d32;\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .cell {\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n  }\n  \n  .caocao {\n    width: 100px;\n    height: 100px;\n  }\n  \n  .general-v {\n    width: 50px;\n    height: 100px;\n  }\n  \n  .general-h {\n    width: 100px;\n    height: 50px;\n  }\n  \n  .soldier {\n    width: 50px;\n    height: 50px;\n  }\n  \n  .game-info {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .controls {\n    justify-content: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .cell {\n    width: 40px;\n    height: 40px;\n    font-size: 16px;\n  }\n  \n  .caocao {\n    width: 80px;\n    height: 80px;\n  }\n  \n  .general-v {\n    width: 40px;\n    height: 80px;\n  }\n  \n  .general-h {\n    width: 80px;\n    height: 40px;\n  }\n  \n  .soldier {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .container {\n    padding: 10px;\n  }\n  \n  .moves {\n    font-size: 16px;\n  }\n}\n</style>"],"names":["BOARD_ROWS","BOARD_COLS","board","ref","blocks","reactive","moves","gameCompleted","selectedBlock","initGame","row","rowCells","col","updateBoard","block","drawBlock","type","getCellClass","cellValue","b","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","rowIndex","cell","colIndex","_normalizeClass","_hoisted_6","_toDisplayString"],"mappings":"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"}