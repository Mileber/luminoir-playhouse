{"version":3,"file":"GomokuGame-BqHAABMd.js","sources":["../../src/components/games/GomokuGame.vue"],"sourcesContent":["<template>\r\n  <div class=\"gomoku-game\">\r\n    <h1>五子棋</h1>\r\n    <div class=\"game-container\">\r\n      <canvas \r\n        ref=\"gomokuCanvas\" \r\n        width=\"400\" \r\n        height=\"400\" \r\n        @click=\"handleClick\"\r\n      ></canvas>\r\n      <div class=\"game-info\">\r\n        <p>{{ gameInfo }}</p>\r\n        <button v-if=\"gameOver\" @click=\"resetGame\">重新开始</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed } from 'vue';\r\n\r\n// 定义组件名称，符合ESLint规则\r\ndefineOptions({\r\n  name: 'GomokuGame'\r\n});\r\n\r\n// 棋盘大小 (15x15)\r\nconst BOARD_SIZE = 15;\r\nconst CELL_SIZE = 400 / BOARD_SIZE;\r\n\r\n// 游戏状态\r\nconst board = ref<number[][]>(Array(BOARD_SIZE).fill(0).map(() => Array(BOARD_SIZE).fill(0)));\r\nconst currentPlayer = ref<number>(1); // 1: 黑棋, 2: 白棋\r\nconst gameOver = ref<boolean>(false);\r\nconst winner = ref<number>(0);\r\nconst gomokuCanvas = ref<HTMLCanvasElement | null>(null);\r\n\r\n// 游戏信息文本\r\nconst gameInfo = computed(() => {\r\n  if (gameOver.value) {\r\n    return winner.value === 1 ? '黑棋获胜！' : '白棋获胜！';\r\n  } else {\r\n    return currentPlayer.value === 1 ? '当前回合: 黑棋' : '当前回合: 白棋';\r\n  }\r\n});\r\n\r\n// 初始化游戏\r\nconst initGame = () => {\r\n  board.value = Array(BOARD_SIZE).fill(0).map(() => Array(BOARD_SIZE).fill(0));\r\n  currentPlayer.value = 1;\r\n  gameOver.value = false;\r\n  winner.value = 0;\r\n  drawBoard();\r\n};\r\n\r\n// 重置游戏\r\nconst resetGame = () => {\r\n  initGame();\r\n};\r\n\r\n// 绘制棋盘\r\nconst drawBoard = () => {\r\n  const canvas = gomokuCanvas.value;\r\n  if (!canvas) return;\r\n  \r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) return;\r\n  \r\n  // 绘制棋盘背景\r\n  ctx.fillStyle = '#f3d2b5';\r\n  ctx.fillRect(0, 0, 400, 400);\r\n  \r\n  // 绘制棋盘网格\r\n  ctx.strokeStyle = '#000';\r\n  ctx.lineWidth = 1;\r\n  \r\n  // 绘制横线\r\n  for (let i = 0; i < BOARD_SIZE; i++) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(CELL_SIZE / 2, CELL_SIZE / 2 + i * CELL_SIZE);\r\n    ctx.lineTo(400 - CELL_SIZE / 2, CELL_SIZE / 2 + i * CELL_SIZE);\r\n    ctx.stroke();\r\n  }\r\n  \r\n  // 绘制竖线\r\n  for (let i = 0; i < BOARD_SIZE; i++) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(CELL_SIZE / 2 + i * CELL_SIZE, CELL_SIZE / 2);\r\n    ctx.lineTo(CELL_SIZE / 2 + i * CELL_SIZE, 400 - CELL_SIZE / 2);\r\n    ctx.stroke();\r\n  }\r\n  \r\n  // 绘制棋子\r\n   for (let i = 0; i < BOARD_SIZE; i++) {\r\n     for (let j = 0; j < BOARD_SIZE; j++) {\r\n      if (board.value[i] && board.value[i]?.[j] !== 0) {\r\n        const x = CELL_SIZE / 2 + j * CELL_SIZE;\r\n        const y = CELL_SIZE / 2 + i * CELL_SIZE;\r\n        \r\n        ctx.beginPath();\r\n        ctx.arc(x, y, CELL_SIZE / 2 - 2, 0, Math.PI * 2);\r\n        \r\n        if (board.value[i] && board.value[i]?.[j] === 1) {\r\n          // 黑棋\r\n          ctx.fillStyle = '#000';\r\n        } else {\r\n          // 白棋\r\n          ctx.fillStyle = '#fff';\r\n          ctx.strokeStyle = '#000';\r\n          ctx.lineWidth = 1;\r\n          ctx.stroke();\r\n        }\r\n        \r\n        ctx.fill();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// 处理点击事件\r\nconst handleClick = (event: MouseEvent) => {\r\n  if (gameOver.value) return;\r\n  \r\n  const canvas = gomokuCanvas.value;\r\n  if (!canvas) return;\r\n  \r\n  const rect = canvas.getBoundingClientRect();\r\n  const x = event.clientX - rect.left;\r\n  const y = event.clientY - rect.top;\r\n  \r\n  // 计算棋盘坐标，并确保落在交叉点上\r\n  const col = Math.round((x - CELL_SIZE / 2) / CELL_SIZE);\r\n  const row = Math.round((y - CELL_SIZE / 2) / CELL_SIZE);\r\n  \r\n  // 检查坐标是否有效\r\n  if (row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE) {\r\n    // 检查该位置是否已有棋子\r\n    if (row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE && board.value[row]?.[col] === 0) {\r\n      // 放置棋子\r\n      if (board.value[row]) {\r\n        board.value[row][col] = currentPlayer.value;\r\n      }\r\n      \r\n      // 检查是否获胜\r\n      if (checkWin(row, col)) {\r\n        gameOver.value = true;\r\n        winner.value = currentPlayer.value;\r\n      } else {\r\n        // 切换玩家\r\n        currentPlayer.value = currentPlayer.value === 1 ? 2 : 1;\r\n      }\r\n      \r\n      // 重绘棋盘\r\n      drawBoard();\r\n    }\r\n  }\r\n};\r\n\r\n// 检查是否获胜\r\nconst checkWin = (row: number, col: number): boolean => {\r\n  const directions = [\r\n    [0, 1],   // 水平\r\n    [1, 0],   // 垂直\r\n    [1, 1],   // 对角线\r\n    [1, -1]   // 反对角线\r\n  ];\r\n  \r\n  // 确保坐标有效\r\n  if (row < 0 || row >= BOARD_SIZE || col < 0 || col >= BOARD_SIZE) {\r\n    return false;\r\n  }\r\n  \r\n  const player = board.value[row]?.[col];\r\n  \r\n  for (const direction of directions) {\r\n    // 使用非空断言，因为我们确定direction是一个包含两个元素的数组\r\n    const dx = direction[0]!;\r\n    const dy = direction[1]!;\r\n    let count = 1;\r\n    \r\n    // 正向检查\r\n    for (let i = 1; i < 5; i++) {\r\n      const newRow = row + i * dx;\r\n      const newCol = col + i * dy;\r\n      \r\n      if (\r\n        newRow >= 0 && newRow < BOARD_SIZE &&\r\n        newCol >= 0 && newCol < BOARD_SIZE &&\r\n        board.value[newRow] && board.value[newRow][newCol] === player\r\n      ) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    // 反向检查\r\n    for (let i = 1; i < 5; i++) {\r\n      const newRow = row - i * dx;\r\n      const newCol = col - i * dy;\r\n      \r\n      if (\r\n        newRow >= 0 && newRow < BOARD_SIZE &&\r\n        newCol >= 0 && newCol < BOARD_SIZE &&\r\n        board.value[newRow] && board.value[newRow][newCol] === player\r\n      ) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    // 如果连成5个，则获胜\r\n    if (count >= 5) {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  return false;\r\n};\r\n\r\n// 组件挂载时初始化游戏\r\nonMounted(() => {\r\n  initGame();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.gomoku-game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f0f0f0;\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.game-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\ncanvas {\r\n  background-color: #f3d2b5;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n}\r\n\r\n.game-info {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.game-info p {\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"names":["BOARD_SIZE","CELL_SIZE","board","ref","currentPlayer","gameOver","winner","gomokuCanvas","gameInfo","computed","initGame","drawBoard","resetGame","canvas","ctx","i","j","x","y","handleClick","event","rect","col","row","checkWin","directions","player","direction","dx","dy","count","newRow","newCol","onMounted","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_hoisted_2","_hoisted_3"],"mappings":"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"}