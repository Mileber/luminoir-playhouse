{"version":3,"file":"Game2048-D3GTogO2.js","sources":["../../src/components/games/Game2048.vue"],"sourcesContent":["<template>\n  <div class=\"game-2048\">\n    <div class=\"container\">\n      <h1>2048 Game</h1>\n      <div class=\"score\">Score: {{ score }}</div>\n      <div class=\"grid\">\n        <div \n          v-for=\"(row, i) in grid\" \n          :key=\"i\"\n          class=\"grid-row\"\n        >\n          <div \n            v-for=\"(cell, j) in row\" \n            :key=\"j\"\n            class=\"cell\"\n            :class=\"{ \n              'empty': cell === 0,\n              'tile-2': cell === 2,\n              'tile-4': cell === 4,\n              'tile-8': cell === 8,\n              'tile-16': cell === 16,\n              'tile-32': cell === 32,\n              'tile-64': cell === 64,\n              'tile-128': cell === 128,\n              'tile-256': cell === 256,\n              'tile-512': cell === 512,\n              'tile-1024': cell === 1024,\n              'tile-2048': cell === 2048\n            }\"\n          >\n            {{ cell !== 0 ? cell : '' }}\n          </div>\n        </div>\n      </div>\n      <div class=\"button-container\">\n        <button @click=\"move('up')\" class=\"up-button\">↑</button>\n        <button @click=\"move('left')\" class=\"left-button\">←</button>\n        <button @click=\"move('right')\" class=\"right-button\">→</button>\n        <button @click=\"move('down')\" class=\"down-button\">↓</button>\n      </div>\n      <div v-if=\"gameOver\" class=\"game-over\">\n        Game Over!\n        <button @click=\"resetGame\">New Game</button>\n      </div>\n      <div v-if=\"win\" class=\"win\">\n        You Win!\n        <button @click=\"resetGame\">New Game</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue'\n\n// 定义组件名称为多词组合\ndefineOptions({\n  name: 'GameTwentyFortyEight'\n})\n\n// 游戏网格\nconst grid = ref<number[][]>([\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0]\n])\n\n// 游戏状态\nconst score = ref(0)\nconst gameOver = ref(false)\nconst win = ref(false)\n\n// 初始化游戏\nconst initGame = () => {\n  // 重置网格\n  grid.value = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n  ]\n  \n  // 重置状态\n  score.value = 0\n  gameOver.value = false\n  win.value = false\n  \n  // 添加两个随机方块\n  addRandomTile()\n  addRandomTile()\n}\n\n// 添加随机方块\nconst addRandomTile = () => {\n  // 查找所有空位置\n  const emptyCells: { row: number; col: number }[] = []\n  for (let i = 0; i < 4; i++) {\n    const gridRow = grid.value[i];\n    if (!gridRow) continue;\n\n    for (let j = 0; j < 4; j++) {\n      if (gridRow[j] === 0) {\n        emptyCells.push({ row: i, col: j })\n      }\n    }\n  }\n\n  // 如果没有空位置，直接返回\n  if (emptyCells.length === 0) return\n\n  // 随机选择一个空位置\n  const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)]\n\n  // 90%概率生成2，10%概率生成4\n  const value = Math.random() < 0.9 ? 2 : 4\n\n  // 在随机位置放置值\n  if (randomCell) {\n    const gridRow = grid.value[randomCell.row];\n    if (gridRow) {\n      gridRow[randomCell.col] = value\n    }\n  }\n}\n\n// 移动函数\nconst move = (direction: 'up' | 'down' | 'left' | 'right') => {\n  if (gameOver.value || win.value) return\n\n  let moved = false\n\n  // 根据方向执行移动\n  switch (direction) {\n    case 'up':\n      moved = moveUp()\n      break\n    case 'down':\n      moved = moveDown()\n      break\n    case 'left':\n      moved = moveLeft()\n      break\n    case 'right':\n      moved = moveRight()\n      break\n  }\n\n  // 如果有移动，则添加新方块并检查游戏状态\n  if (moved) {\n    addRandomTile()\n    checkGameState()\n  }\n}\n\n// 向左移动\nconst moveLeft = (): boolean => {\n  let moved = false\n\n  for (let i = 0; i < 4; i++) {\n    // 获取当前行并移除0\n    const currentRow = grid.value[i];\n    const row = currentRow ? currentRow.filter(val => val !== 0) : []\n\n    // 合并相同相邻元素\n    for (let j = 0; j < row.length - 1; j++) {\n      if (row[j] !== undefined && row[j] === row[j + 1]) {\n        row[j] = (row[j] || 0) * 2\n        score.value += row[j] || 0\n        row.splice(j + 1, 1)\n      }\n    }\n\n    // 补充0到长度为4\n    while (row.length < 4) {\n      row.push(0)\n    }\n\n    // 检查是否有变化\n    const gridRow = grid.value[i];\n    if (gridRow) {\n      for (let j = 0; j < 4; j++) {\n        if (gridRow[j] !== row[j]) {\n          moved = true\n        }\n\n        gridRow[j] = row[j] || 0\n      }\n    }\n  }\n\n  return moved\n}\n\n// 向右移动\nconst moveRight = (): boolean => {\n  let moved = false\n\n  for (let i = 0; i < 4; i++) {\n    // 获取当前行并移除0\n    const currentRow = grid.value[i];\n    const row = currentRow ? currentRow.filter(val => val !== 0) : []\n\n    // 合并相同相邻元素（从右向左）\n    for (let j = row.length - 1; j > 0; j--) {\n      if (row[j] !== undefined && row[j] === row[j - 1]) {\n        row[j] = (row[j] || 0) * 2\n        score.value += row[j] || 0\n        row.splice(j - 1, 1)\n        j-- // 调整索引\n      }\n    }\n\n    // 在前面补充0到长度为4\n    while (row.length < 4) {\n      row.unshift(0)\n    }\n\n    // 检查是否有变化\n    for (let j = 0; j < 4; j++) {\n      const currentRow = grid.value[i];\n      if (currentRow && currentRow[j] !== row[j]) {\n        moved = true\n      }\n\n      if (currentRow) {\n        currentRow[j] = row[j] || 0\n      }\n    }\n  }\n\n  return moved\n}\n\n// 向上移动\nconst moveUp = (): boolean => {\n  let moved = false\n\n  for (let j = 0; j < 4; j++) {\n    // 获取当前列并移除0\n    const column: number[] = []\n    for (let i = 0; i < 4; i++) {\n      const gridRow = grid.value[i];\n      if (!gridRow) continue;\n\n      if (gridRow[j] !== 0) {\n        column.push(gridRow[j] || 0)\n      }\n    }\n\n    // 合并相同相邻元素\n    for (let i = 0; i < column.length - 1; i++) {\n      if (column[i] !== undefined && column[i] === column[i + 1]) {\n        column[i] = (column[i] || 0) * 2\n        score.value += column[i] || 0\n        column.splice(i + 1, 1)\n      }\n    }\n\n    // 补充0到长度为4\n    while (column.length < 4) {\n      column.push(0)\n    }\n\n    // 检查是否有变化\n    for (let i = 0; i < 4; i++) {\n      const gridRow = grid.value[i];\n      if (!gridRow) continue;\n\n      if (gridRow[j] !== column[i]) {\n        moved = true\n      }\n\n      gridRow[j] = column[i] || 0\n    }\n  }\n\n  return moved\n}\n\n// 向下移动\nconst moveDown = (): boolean => {\n  let moved = false\n\n  for (let j = 0; j < 4; j++) {\n    // 获取当前列并移除0\n    const column: number[] = []\n    for (let i = 0; i < 4; i++) {\n      const gridRow = grid.value[i];\n      if (!gridRow) continue;\n\n      if (gridRow[j] !== 0) {\n        column.push(gridRow[j] || 0)\n      }\n    }\n\n    // 合并相同相邻元素（从下向上）\n    for (let i = column.length - 1; i > 0; i--) {\n      if (column[i] !== undefined && column[i] === column[i - 1]) {\n        column[i] = (column[i] || 0) * 2\n        score.value += column[i] || 0\n        column.splice(i - 1, 1)\n        i-- // 调整索引\n      }\n    }\n\n    // 在前面补充0到长度为4\n    while (column.length < 4) {\n      column.unshift(0)\n    }\n\n    // 检查是否有变化\n    for (let i = 0; i < 4; i++) {\n      const gridRow = grid.value[i];\n      if (!gridRow) continue;\n\n      if (gridRow[j] !== column[i]) {\n        moved = true\n      }\n\n      gridRow[j] = column[i] || 0\n    }\n  }\n\n  return moved\n}\n\n// 检查游戏状态\nconst checkGameState = (): void => {\n  // 检查是否获胜\n  for (let i = 0; i < 4; i++) {\n    const row = grid.value[i];\n    if (!row) continue;\n\n    for (let j = 0; j < 4; j++) {\n      if (row[j] === 2048) {\n        win.value = true\n        return\n      }\n    }\n  }\n\n  // 检查是否还有空位置\n  for (let i = 0; i < 4; i++) {\n    const row = grid.value[i];\n    if (!row) continue;\n\n    for (let j = 0; j < 4; j++) {\n      if (row[j] === 0) {\n        return\n      }\n    }\n  }\n\n  // 检查是否还能合并\n  for (let i = 0; i < 4; i++) {\n    const row = grid.value[i];\n    if (!row) continue;\n\n    for (let j = 0; j < 3; j++) {\n      if (row[j] !== undefined &&\n        row[j + 1] !== undefined &&\n        row[j] === row[j + 1]) {\n        return\n      }\n    }\n  }\n\n  for (let j = 0; j < 4; j++) {\n    for (let i = 0; i < 3; i++) {\n      const row = grid.value[i];\n      const nextRow = grid.value[i + 1];\n      if (!row || !nextRow) continue;\n\n      if (row[j] !== undefined &&\n        nextRow[j] !== undefined &&\n        row[j] === nextRow[j]) {\n        return\n      }\n    }\n  }\n\n  // 如果没有空位置且不能合并，则游戏结束\n  gameOver.value = true\n}\n\n// 重置游戏\nconst resetGame = () => {\n  initGame()\n}\n\n// 处理键盘事件\nconst handleKeyDown = (e: KeyboardEvent) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      move('up')\n      break\n    case 'ArrowDown':\n      move('down')\n      break\n    case 'ArrowLeft':\n      move('left')\n      break\n    case 'ArrowRight':\n      move('right')\n      break\n  }\n}\n\n// 触摸事件处理\nlet touchStartX = 0\nlet touchStartY = 0\nconst handleTouchStart = (e: TouchEvent): void => {\n  const touch = e.touches[0];\n  if (!touch) return;\n\n  touchStartX = touch.clientX\n  touchStartY = touch.clientY\n}\n\nconst handleTouchEnd = (e: TouchEvent): void => {\n  if (gameOver.value || win.value) return\n\n  const touch = e.changedTouches[0];\n  if (!touch) return;\n\n  const touchEndX = touch.clientX\n  const touchEndY = touch.clientY\n\n  const dx = touchEndX - touchStartX\n  const dy = touchEndY - touchStartY\n\n  // 确定主要的移动方向\n  if (Math.abs(dx) > Math.abs(dy)) {\n    // 水平滑动\n    if (dx > 50) {\n      move('right') // 右滑\n    } else if (dx < -50) {\n      move('left') // 左滑\n    }\n  } else {\n    // 垂直滑动\n    if (dy > 50) {\n      move('down') // 下滑\n    } else if (dy < -50) {\n      move('up') // 上滑\n    }\n  }\n}\n\n// 初始化游戏\nonMounted(() => {\n  initGame()\n  window.addEventListener('keydown', handleKeyDown)\n\n  // 添加触摸事件监听\n  const gridElement = document.querySelector('.grid')\n  if (gridElement) {\n    gridElement.addEventListener('touchstart', handleTouchStart as EventListener)\n    gridElement.addEventListener('touchend', handleTouchEnd as EventListener)\n  }\n})\n\n// 清理事件监听器\nonUnmounted(() => {\n  window.removeEventListener('keydown', handleKeyDown)\n\n  // 移除触摸事件监听\n  const gridElement = document.querySelector('.grid')\n  if (gridElement) {\n    gridElement.removeEventListener('touchstart', handleTouchStart as EventListener)\n    gridElement.removeEventListener('touchend', handleTouchEnd as EventListener)\n  }\n})\n</script>\n\n<!-- eslint-disable vue/multi-word-component-names -->\n<style scoped>\n.game-2048 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  background-color: #ffffff;\n  font-family: avenir, sans-serif;\n  min-height: 100vh;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n}\n\nh1 {\n  color: #333;\n  font-size: 1.5em;\n  margin-bottom: 10px;\n}\n\n.score {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-bottom: 20px;\n  color: #333;\n}\n\n.grid {\n  display: grid;\n  grid-template-rows: repeat(4, 1fr);\n  gap: 6px;\n  background-color: #bbada0;\n  padding: 12px;\n  border-radius: 10px;\n  width: 300px;\n  height: 300px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n}\n\n.grid-row {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 6px;\n}\n\n.cell {\n  width: 60px;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 20px;\n  border-radius: 5px;\n  background-color: #ccc0b3;\n  color: #776e65;\n  transition: all 0.15s ease;\n}\n\n.cell.empty {\n  background-color: #cdc1b4;\n}\n\n.cell.tile-2 {\n  background-color: #eee4da;\n  color: #776e65;\n}\n\n.cell.tile-4 {\n  background-color: #ede0c8;\n  color: #776e65;\n}\n\n.cell.tile-8 {\n  background-color: #f2b179;\n  color: #f9f6f2;\n}\n\n.cell.tile-16 {\n  background-color: #f59563;\n  color: #f9f6f2;\n}\n\n.cell.tile-32 {\n  background-color: #f67c5f;\n  color: #f9f6f2;\n}\n\n.cell.tile-64 {\n  background-color: #f65e3b;\n  color: #f9f6f2;\n}\n\n.cell.tile-128 {\n  background-color: #edcf72;\n  color: #f9f6f2;\n  font-size: 18px;\n}\n\n.cell.tile-256 {\n  background-color: #edcc61;\n  color: #f9f6f2;\n  font-size: 18px;\n}\n\n.cell.tile-512 {\n  background-color: #edc850;\n  color: #f9f6f2;\n  font-size: 18px;\n}\n\n.cell.tile-1024 {\n  background-color: #edc53f;\n  color: #f9f6f2;\n  font-size: 14px;\n}\n\n.cell.tile-2048 {\n  background-color: #edc22e;\n  color: #f9f6f2;\n  font-size: 14px;\n}\n\n.button-container {\n  display: grid;\n  grid-template-columns: repeat(3, 60px);\n  grid-template-rows: repeat(2, 60px);\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.button-container button {\n  background-color: #f57c00;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 24px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.button-container button:hover {\n  background-color: #fb8c00;\n  transform: scale(1.05);\n}\n\n.up-button {\n  grid-column: 2;\n  grid-row: 1;\n}\n\n.left-button {\n  grid-column: 1;\n  grid-row: 2;\n}\n\n.right-button {\n  grid-column: 3;\n  grid-row: 2;\n}\n\n.down-button {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n.game-over,\n.win {\n  margin-top: 20px;\n  font-size: 1.5em;\n  font-weight: bold;\n  text-align: center;\n  color: #333;\n}\n\n.game-over button,\n.win button {\n  display: block;\n  margin: 10px auto 0;\n  padding: 10px 20px;\n  background-color: #f57c00;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.game-over button:hover,\n.win button:hover {\n  background-color: #fb8c00;\n  transform: scale(1.05);\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .grid {\n    width: 250px;\n    height: 250px;\n  }\n  \n  .cell {\n    width: 50px;\n    height: 50px;\n    font-size: 18px;\n  }\n  \n  .cell.tile-128,\n  .cell.tile-256,\n  .cell.tile-512 {\n    font-size: 16px;\n  }\n  \n  .cell.tile-1024,\n  .cell.tile-2048 {\n    font-size: 12px;\n  }\n  \n  .button-container {\n    grid-template-columns: repeat(3, 50px);\n    grid-template-rows: repeat(2, 50px);\n    gap: 8px;\n  }\n  \n  .button-container button {\n    font-size: 20px;\n  }\n}\n\n@media (max-width: 480px) {\n  .grid {\n    width: 200px;\n    height: 200px;\n  }\n  \n  .cell {\n    width: 40px;\n    height: 40px;\n    font-size: 14px;\n  }\n  \n  .cell.tile-128,\n  .cell.tile-256,\n  .cell.tile-512 {\n    font-size: 12px;\n  }\n  \n  .cell.tile-1024,\n  .cell.tile-2048 {\n    font-size: 10px;\n  }\n  \n  .button-container {\n    grid-template-columns: repeat(3, 40px);\n    grid-template-rows: repeat(2, 40px);\n    gap: 6px;\n  }\n  \n  .button-container button {\n    font-size: 16px;\n  }\n  \n  h1 {\n    font-size: 1.2em;\n  }\n  \n  .score {\n    font-size: 1em;\n  }\n}\n</style>"],"names":["grid","ref","score","gameOver","win","initGame","addRandomTile","emptyCells","i","gridRow","j","randomCell","value","move","direction","moved","moveUp","moveDown","moveLeft","moveRight","checkGameState","currentRow","row","val","column","nextRow","resetGame","handleKeyDown","e","touchStartX","touchStartY","handleTouchStart","touch","handleTouchEnd","touchEndX","touchEndY","dx","dy","onMounted","gridElement","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_Fragment","_renderList","cell","_toDisplayString","_hoisted_5","_hoisted_6","_hoisted_7"],"mappings":"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"}