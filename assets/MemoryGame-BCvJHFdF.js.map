{"version":3,"file":"MemoryGame-BCvJHFdF.js","sources":["../../src/components/games/MemoryGame.vue"],"sourcesContent":["<template>\n  <div class=\"memory-game\">\n    <div class=\"container\">\n      <h1>翻翻乐</h1>\n      <div class=\"game-info\">\n        <div class=\"moves\">步数: {{ moves }}</div>\n        <div class=\"pairs\">配对: {{ matchedPairs }}/{{ totalPairs }}</div>\n        <div class=\"controls\">\n          <button @click=\"initGame\" class=\"restart-btn\">重新开始</button>\n        </div>\n      </div>\n      \n      <div class=\"game-board\">\n        <div \n          v-for=\"(row, rowIndex) in board\" \n          :key=\"rowIndex\"\n          class=\"board-row\"\n        >\n          <div \n            v-for=\"(card, colIndex) in row\" \n            :key=\"colIndex\"\n            class=\"card\"\n            :class=\"{ \n              'flipped': card.isFlipped,\n              'matched': card.isMatched\n            }\"\n            @click=\"flipCard(rowIndex, colIndex)\"\n          >\n            <div class=\"card-face card-front\"></div>\n            <div class=\"card-face card-back\">\n              <span class=\"emoji\">{{ card.emoji }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"gameCompleted\" class=\"game-completed\">\n        <h2>恭喜你完成了游戏！</h2>\n        <p>总共用了 {{ moves }} 步</p>\n        <button @click=\"initGame\" class=\"play-again-btn\">再玩一次</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, onMounted } from 'vue'\n\n// 定义组件名称\ndefineOptions({\n  name: 'MemoryGame'\n})\n\n// 游戏常量\nconst BOARD_SIZE = 4\nconst EMOJIS: string[] = ['😀', '😂', '🥰', '😎', '🤩', '🥳', '😍', '🤗']\n\n// 卡片接口\ninterface Card {\n  emoji: string\n  isFlipped: boolean\n  isMatched: boolean\n}\n\n// 游戏状态\nconst board = reactive<Card[][]>([])\nconst moves = ref(0)\nconst matchedPairs = ref(0)\nconst totalPairs = ref(0)\nconst gameCompleted = ref(false)\nconst firstCard = ref<{ row: number; col: number } | null>(null)\nconst secondCard = ref<{ row: number; col: number } | null>(null)\nconst lockBoard = ref(false)\n\n// 初始化游戏\nconst initGame = () => {\n  // 重置游戏状态\n  moves.value = 0\n  matchedPairs.value = 0\n  gameCompleted.value = false\n  firstCard.value = null\n  secondCard.value = null\n  lockBoard.value = false\n  \n  // 清空游戏板\n  board.length = 0\n  \n  // 计算配对数量\n  totalPairs.value = (BOARD_SIZE * BOARD_SIZE) / 2\n  \n  // 创建卡片数组\n  const emojis: string[] = []\n  \n  // 选择需要的emoji数量\n  for (let i = 0; i < totalPairs.value; i++) {\n    // 确保EMOJIS[i]存在\n    if (EMOJIS[i] !== undefined) {\n      // @ts-expect-error 确保EMOJIS[i]存在\n      emojis.push(EMOJIS[i])\n      // @ts-expect-error 确保EMOJIS[i]存在\n      emojis.push(EMOJIS[i])\n    }\n  }\n  \n  // 随机打乱emoji数组\n  shuffleArray(emojis)\n  \n  // 创建游戏板\n  let emojiIndex = 0\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const rowCards: Card[] = []\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      // 确保emojis[emojiIndex]存在\n      if (emojis[emojiIndex] !== undefined) {\n        rowCards.push({\n          emoji: emojis[emojiIndex]!,\n          isFlipped: false,\n          isMatched: false\n        })\n      }\n      emojiIndex++\n    }\n    board.push(rowCards)\n  }\n}\n\n// 随机打乱数组\nconst shuffleArray = (array: string[]) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    // 使用非空断言，因为前面已经检查了undefined\n    if (array[i] !== undefined && array[j] !== undefined) {\n      [array[i], array[j]] = [array[j]!, array[i]!]\n    }\n  }\n}\n\n// 翻牌\nconst flipCard = (row: number, col: number) => {\n  // 如果游戏锁定、卡片已翻开或已配对，则不处理\n  const card = board[row]?.[col]\n  if (lockBoard.value || !card || card.isFlipped || card.isMatched) {\n    return\n  }\n  \n  // 翻开卡片\n  if (card) {\n    card.isFlipped = true\n  }\n  \n  // 如果这是第一张翻开的卡片\n  if (!firstCard.value) {\n    firstCard.value = { row, col }\n    return\n  }\n  \n  // 这是第二张翻开的卡片\n  secondCard.value = { row, col }\n  \n  // 增加步数\n  moves.value++\n  \n  // 检查是否匹配\n  checkForMatch()\n}\n\n// 检查是否匹配\nconst checkForMatch = () => {\n  if (!firstCard.value || !secondCard.value) return\n  \n  // @ts-expect-error 确保访问是安全的\n  const firstCardObj = board[firstCard.value.row][firstCard.value.col]\n  // @ts-expect-error 确保访问是安全的\n  const secondCardObj = board[secondCard.value.row][secondCard.value.col]\n  \n  // @ts-expect-error 确保firstCardObj和secondCardObj存在\n  const isMatch = firstCardObj.emoji === secondCardObj.emoji\n  \n  if (isMatch) {\n    // 匹配成功\n    // @ts-expect-error 确保firstCardObj和secondCardObj存在\n    firstCardObj.isMatched = true\n    // @ts-expect-error 确保firstCardObj和secondCardObj存在\n    secondCardObj.isMatched = true\n    matchedPairs.value++\n    \n    // 重置选择\n    resetSelection()\n    \n    // 检查游戏是否完成\n    checkGameCompletion()\n  } else {\n    // 不匹配，翻回卡片\n    lockBoard.value = true\n    setTimeout(() => {\n      // @ts-expect-error 确保firstCardObj和secondCardObj存在\n      firstCardObj.isFlipped = false\n      // @ts-expect-error 确保firstCardObj和secondCardObj存在\n      secondCardObj.isFlipped = false\n      resetSelection()\n      lockBoard.value = false\n    }, 1000)\n  }\n}\n\n// 重置选择\nconst resetSelection = () => {\n  firstCard.value = null\n  secondCard.value = null\n}\n\n// 检查游戏是否完成\nconst checkGameCompletion = () => {\n  if (matchedPairs.value === totalPairs.value) {\n    gameCompleted.value = true\n  }\n}\n\n// 组件挂载时初始化游戏\nonMounted(() => {\n  initGame()\n})\n</script>\n\n<style scoped>\n.memory-game {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.moves, .pairs {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.controls {\n  display: flex;\n  gap: 10px;\n}\n\nbutton {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.restart-btn, .play-again-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.game-board {\n  display: inline-block;\n  margin-bottom: 20px;\n}\n\n.board-row {\n  display: flex;\n}\n\n.card {\n  width: 70px;\n  height: 70px;\n  position: relative;\n  margin: 5px;\n  transform-style: preserve-3d;\n  transition: transform 0.3s;\n  cursor: pointer;\n}\n\n.card.flipped, .card.matched {\n  transform: rotateY(180deg);\n}\n\n.card-face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  font-size: 30px;\n}\n\n.card-front {\n  background-color: #2196F3;\n  border: 2px solid #1976D2;\n}\n\n.card-back {\n  background-color: #fff;\n  border: 2px solid #ccc;\n  transform: rotateY(180deg);\n}\n\n.card.matched .card-back {\n  background-color: #c8e6c9;\n  border-color: #4caf50;\n}\n\n.game-completed {\n  text-align: center;\n  padding: 20px;\n  background-color: #e8f5e9;\n  border-radius: 8px;\n}\n\n.game-completed h2 {\n  margin-top: 0;\n  color: #2e7d32;\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .card {\n    width: 60px;\n    height: 60px;\n    font-size: 24px;\n  }\n  \n  .game-info {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .controls {\n    justify-content: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .card {\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n    margin: 3px;\n  }\n  \n  .container {\n    padding: 10px;\n  }\n  \n  .moves, .pairs {\n    font-size: 16px;\n  }\n}\n</style>"],"names":["BOARD_SIZE","EMOJIS","board","reactive","moves","ref","matchedPairs","totalPairs","gameCompleted","firstCard","secondCard","lockBoard","initGame","emojis","i","shuffleArray","emojiIndex","row","rowCards","col","array","j","flipCard","card","checkForMatch","firstCardObj","secondCardObj","resetSelection","checkGameCompletion","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_Fragment","_renderList","rowIndex","colIndex","$event","_hoisted_8","_hoisted_9","_hoisted_10"],"mappings":"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"}