{"version":3,"file":"SnakeGame-B6zyglpD.js","sources":["../../src/components/games/SnakeGame.vue"],"sourcesContent":["<template>\n  <div class=\"snake-game\">\n    <div class=\"container\">\n      <h1>贪吃蛇游戏</h1>\n      <div class=\"game-info\">\n        <div class=\"score\">得分: {{ score }}</div>\n        <div class=\"high-score\">最高分: {{ highScore }}</div>\n        <div class=\"controls\">\n          <button @click=\"startGame\" v-if=\"!gameRunning && !gameOver\" class=\"start-btn\">开始游戏</button>\n          <button @click=\"pauseGame\" v-if=\"gameRunning\" class=\"pause-btn\">暂停</button>\n          <button @click=\"resetGame\" class=\"reset-btn\">重新开始</button>\n        </div>\n      </div>\n      \n      <div class=\"game-board\" ref=\"gameBoard\">\n        <div \n          v-for=\"(row, rowIndex) in board\" \n          :key=\"rowIndex\"\n          class=\"board-row\"\n        >\n          <div \n            v-for=\"(cell, colIndex) in row\" \n            :key=\"colIndex\"\n            class=\"cell\"\n            :class=\"getCellClass(cell)\"\n          >\n          </div>\n        </div>\n      </div>\n      \n      <!-- 移动端控制按钮 -->\n      <div class=\"mobile-controls\" v-if=\"isMobile\">\n        <div class=\"control-row\">\n          <button @click=\"changeDirection('up')\" class=\"control-btn up\">↑</button>\n        </div>\n        <div class=\"control-row\">\n          <button @click=\"changeDirection('left')\" class=\"control-btn left\">←</button>\n          <button @click=\"changeDirection('down')\" class=\"control-btn down\">↓</button>\n          <button @click=\"changeDirection('right')\" class=\"control-btn right\">→</button>\n        </div>\n      </div>\n      \n      <div v-if=\"gameOver\" class=\"game-over\">\n        游戏结束!\n        <button @click=\"resetGame\">重新开始</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted } from 'vue'\n\n// 定义组件名称\ndefineOptions({\n  name: 'SnakeGame'\n})\n\n// 游戏常量\nconst BOARD_SIZE = 15\nconst INITIAL_SPEED = 150\nconst MIN_SPEED = 50\nconst SPEED_DECREMENT = 2\n\n// 游戏状态\nconst board = ref<number[][]>([])\nconst snake = ref<{ x: number; y: number }[]>([{ x: 7, y: 7 }])\nconst food = ref<{ x: number; y: number }>({ x: 5, y: 5 })\nconst direction = ref<'up' | 'down' | 'left' | 'right'>('right')\nconst nextDirection = ref<'up' | 'down' | 'left' | 'right'>('right')\nconst score = ref(0)\nconst highScore = ref(0)\nconst gameRunning = ref(false)\nconst gameOver = ref(false)\nconst gameSpeed = ref(INITIAL_SPEED)\nconst isMobile = ref(false)\n\n// 游戏循环定时器\nlet gameLoop: number | null = null\n\n// 初始化游戏板\nconst initBoard = () => {\n  board.value = Array(BOARD_SIZE).fill(0).map(() => Array(BOARD_SIZE).fill(0))\n}\n\n// 获取单元格类名\nconst getCellClass = (cellValue: number) => {\n  return {\n    'snake-head': cellValue === 2,\n    'snake-body': cellValue === 1,\n    'food': cellValue === 3,\n    'empty': cellValue === 0\n  }\n}\n\n// 初始化游戏\nconst initGame = () => {\n  // 初始化游戏板\n  initBoard()\n  \n  // 初始化蛇\n  snake.value = [{ x: 7, y: 7 }]\n  \n  // 初始化方向\n  direction.value = 'right'\n  nextDirection.value = 'right'\n  \n  // 生成食物\n  generateFood()\n  \n  // 重置分数\n  score.value = 0\n  gameSpeed.value = INITIAL_SPEED\n  \n  // 重置游戏状态\n  gameOver.value = false\n  \n  // 更新游戏板\n  updateBoard()\n}\n\n// 生成食物\nconst generateFood = () => {\n  // 查找所有空位置\n  const emptyCells: { x: number; y: number }[] = []\n  for (let y = 0; y < BOARD_SIZE; y++) {\n    for (let x = 0; x < BOARD_SIZE; x++) {\n      // 检查该位置是否为空\n      let isOccupied = false\n      for (const segment of snake.value) {\n        if (segment.x === x && segment.y === y) {\n          isOccupied = true\n          break\n        }\n      }\n      \n      if (!isOccupied) {\n        emptyCells.push({ x, y })\n      }\n    }\n  }\n  \n  // 如果没有空位置，游戏胜利\n  if (emptyCells.length === 0) {\n    gameOver.value = true\n    gameRunning.value = false\n    if (gameLoop) {\n      clearInterval(gameLoop)\n      gameLoop = null\n    }\n    return\n  }\n  \n  // 随机选择一个空位置放置食物\n  const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)]\n  // @ts-expect-error 确保randomCell存在\n  food.value = { x: randomCell.x, y: randomCell.y }\n}\n\n// 更新游戏板\nconst updateBoard = () => {\n  // 清空游戏板\n  for (let y = 0; y < BOARD_SIZE; y++) {\n    for (let x = 0; x < BOARD_SIZE; x++) {\n      if (board.value[y]) {\n        // @ts-expect-error 确保访问是安全的\n        board.value[y][x] = 0\n      }\n    }\n  }\n  \n  // 绘制蛇身\n  for (let i = 0; i < snake.value.length; i++) {\n    const segment = snake.value[i]\n    if (segment && board.value[segment.y] && segment.x !== undefined && segment.x >= 0 && \n        segment.x < BOARD_SIZE && segment.y !== undefined && segment.y >= 0 && segment.y < BOARD_SIZE) {\n      // 蛇头\n      if (i === 0) {\n        if (board.value[segment.y] && segment.x !== undefined && segment.y !== undefined) {\n          // @ts-expect-error 确保访问是安全的\n          board.value[segment.y][segment.x] = 2\n        }\n      } else {\n        // 蛇身\n        if (board.value[segment.y] && segment.x !== undefined && segment.y !== undefined) {\n          // @ts-expect-error 确保访问是安全的\n          board.value[segment.y][segment.x] = 1\n        }\n      }\n    }\n  }\n  \n  // 绘制食物\n  if (food.value && board.value[food.value.y] && food.value.x !== undefined && \n      food.value.x >= 0 && food.value.x < BOARD_SIZE && food.value.y !== undefined && \n      food.value.y >= 0 && food.value.y < BOARD_SIZE) {\n    if (board.value[food.value.y] && food.value.x !== undefined && food.value.y !== undefined) {\n      // @ts-expect-error 确保访问是安全的\n      board.value[food.value.y][food.value.x] = 3\n    }\n  }\n}\n\n// 改变方向\nconst changeDirection = (newDirection: 'up' | 'down' | 'left' | 'right') => {\n  // 防止反向移动\n  if (\n    (direction.value === 'up' && newDirection === 'down') ||\n    (direction.value === 'down' && newDirection === 'up') ||\n    (direction.value === 'left' && newDirection === 'right') ||\n    (direction.value === 'right' && newDirection === 'left')\n  ) {\n    return\n  }\n  \n  nextDirection.value = newDirection\n}\n\n// 移动蛇\nconst moveSnake = () => {\n  // 更新方向\n  direction.value = nextDirection.value\n  \n  // 获取蛇头\n  const head = { ...snake.value[0] }\n  \n  // 根据方向移动蛇头\n  switch (direction.value) {\n    case 'up':\n      if (head.y !== undefined) head.y -= 1\n      break\n    case 'down':\n      if (head.y !== undefined) head.y += 1\n      break\n    case 'left':\n      if (head.x !== undefined) head.x -= 1\n      break\n    case 'right':\n      if (head.x !== undefined) head.x += 1\n      break\n  }\n  \n  // 检查是否撞墙\n  if (head.x !== undefined && head.y !== undefined && \n      (head.x < 0 || head.x >= BOARD_SIZE || head.y < 0 || head.y >= BOARD_SIZE)) {\n    gameOverHandler()\n    return\n  }\n  \n  // 检查是否撞到自己\n  for (let i = 0; i < snake.value.length; i++) {\n    const segment = snake.value[i]\n    if (segment && head.x !== undefined && head.y !== undefined &&\n        segment.x === head.x && segment.y === head.y) {\n      gameOverHandler()\n      return\n    }\n  }\n  \n  // 将新头部添加到蛇身\n  if (head.x !== undefined && head.y !== undefined) {\n    snake.value.unshift({x: head.x, y: head.y})\n  }\n  \n  // 检查是否吃到食物\n  if (head.x !== undefined && head.y !== undefined && food.value &&\n      head.x === food.value.x && head.y === food.value.y) {\n    // 增加分数\n    score.value += 10\n    \n    // 增加速度（但不低于最小速度）\n    if (gameSpeed.value > MIN_SPEED) {\n      gameSpeed.value -= SPEED_DECREMENT\n      if (gameLoop) {\n        clearInterval(gameLoop)\n        gameLoop = null\n      }\n      gameLoop = window.setInterval(gameStep, gameSpeed.value)\n    }\n    \n    // 生成新食物\n    generateFood()\n  } else {\n    // 移除尾部\n    snake.value.pop()\n  }\n  \n  // 更新游戏板\n  updateBoard()\n}\n\n// 游戏结束处理\nconst gameOverHandler = () => {\n  gameOver.value = true\n  gameRunning.value = false\n  \n  // 更新最高分\n  if (score.value > highScore.value) {\n    highScore.value = score.value\n    // 保存最高分到localStorage\n    try {\n      localStorage.setItem('snakeHighScore', highScore.value.toString())\n    } catch (e) {\n      console.error('无法保存最高分到localStorage:', e)\n    }\n  }\n  \n  // 停止游戏循环\n  if (gameLoop) {\n    clearInterval(gameLoop)\n    gameLoop = null\n  }\n}\n\n// 游戏步骤\nconst gameStep = () => {\n  if (gameRunning.value && !gameOver.value) {\n    moveSnake()\n  }\n}\n\n// 开始游戏\nconst startGame = () => {\n  if (!gameRunning.value) {\n    gameRunning.value = true\n    if (!gameLoop) {\n      gameLoop = window.setInterval(gameStep, gameSpeed.value)\n    }\n  }\n}\n\n// 暂停游戏\nconst pauseGame = () => {\n  gameRunning.value = false\n}\n\n// 重置游戏\nconst resetGame = () => {\n  // 停止当前游戏循环\n  if (gameLoop) {\n    clearInterval(gameLoop)\n    gameLoop = null\n  }\n  \n  // 初始化游戏\n  initGame()\n  \n  // 开始新游戏\n  gameRunning.value = true\n  gameLoop = window.setInterval(gameStep, gameSpeed.value)\n}\n\n// 处理键盘事件\nconst handleKeyDown = (e: KeyboardEvent) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      changeDirection('up')\n      break\n    case 'ArrowDown':\n      changeDirection('down')\n      break\n    case 'ArrowLeft':\n      changeDirection('left')\n      break\n    case 'ArrowRight':\n      changeDirection('right')\n      break\n    case ' ':\n      if (gameOver.value) {\n        resetGame()\n      } else if (gameRunning.value) {\n        pauseGame()\n      } else {\n        startGame()\n      }\n      break\n  }\n}\n\n// 检查是否为移动设备\nconst checkIsMobile = () => {\n  isMobile.value = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n}\n\n// 组件挂载时\nonMounted(() => {\n  // 检查是否为移动设备\n  checkIsMobile()\n  \n  // 初始化游戏\n  initGame()\n  \n  // 加载最高分\n  try {\n    const savedHighScore = localStorage.getItem('snakeHighScore')\n    if (savedHighScore) {\n      highScore.value = parseInt(savedHighScore, 10)\n    }\n  } catch (e) {\n    console.error('无法从localStorage加载最高分:', e)\n  }\n  \n  // 添加键盘事件监听器\n  window.addEventListener('keydown', handleKeyDown)\n})\n\n// 组件卸载前\nonUnmounted(() => {\n  // 清理游戏循环\n  if (gameLoop) {\n    clearInterval(gameLoop)\n    gameLoop = null\n  }\n  \n  // 移除键盘事件监听器\n  window.removeEventListener('keydown', handleKeyDown)\n})\n</script>\n\n<style scoped>\n.snake-game {\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.container {\n  max-width: 500px;\n  width: 100%;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.score, .high-score {\n  font-weight: bold;\n  font-size: 18px;\n}\n\n.controls {\n  display: flex;\n  gap: 10px;\n}\n\nbutton {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.start-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.pause-btn {\n  background-color: #FF9800;\n  color: white;\n}\n\n.reset-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.game-board {\n  display: inline-block;\n  border: 2px solid #333;\n  background-color: #f0f0f0;\n  margin-bottom: 20px;\n}\n\n.board-row {\n  display: flex;\n}\n\n.cell {\n  width: 25px;\n  height: 25px;\n  border: 1px solid #ddd;\n}\n\n.snake-head {\n  background-color: #4CAF50;\n  border-radius: 4px;\n}\n\n.snake-body {\n  background-color: #8BC34A;\n  border-radius: 2px;\n}\n\n.food {\n  background-color: #f44336;\n  border-radius: 50%;\n}\n\n.game-over {\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n  color: #f44336;\n  margin: 20px 0;\n}\n\n.game-over button {\n  display: block;\n  margin: 10px auto;\n  padding: 10px 20px;\n  background-color: #2196F3;\n  color: white;\n  font-size: 16px;\n}\n\n.mobile-controls {\n  display: none;\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .mobile-controls {\n    display: block;\n    margin-top: 20px;\n  }\n  \n  .control-row {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    margin-bottom: 10px;\n  }\n  \n  .control-btn {\n    width: 60px;\n    height: 60px;\n    font-size: 24px;\n    border: none;\n    border-radius: 50%;\n    background-color: #2196F3;\n    color: white;\n    cursor: pointer;\n  }\n  \n  .control-btn:active {\n    background-color: #0b7dda;\n  }\n  \n  .cell {\n    width: 20px;\n    height: 20px;\n  }\n}\n\n@media (max-width: 480px) {\n  .cell {\n    width: 15px;\n    height: 15px;\n  }\n  \n  .control-btn {\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n  }\n}\n</style>"],"names":["BOARD_SIZE","INITIAL_SPEED","MIN_SPEED","SPEED_DECREMENT","board","ref","snake","food","direction","nextDirection","score","highScore","gameRunning","gameOver","gameSpeed","isMobile","gameLoop","initBoard","getCellClass","cellValue","initGame","generateFood","updateBoard","emptyCells","y","x","isOccupied","segment","randomCell","i","changeDirection","newDirection","moveSnake","head","gameOverHandler","gameStep","startGame","pauseGame","resetGame","handleKeyDown","checkIsMobile","onMounted","savedHighScore","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","row","rowIndex","cell","colIndex","_normalizeClass","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11"],"mappings":"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"}