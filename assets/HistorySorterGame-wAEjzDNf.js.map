{"version":3,"file":"HistorySorterGame-wAEjzDNf.js","sources":["../../src/components/games/HistorySorterGame.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\n\r\n// --- 类型定义 ---\r\ninterface HistoricalEvent {\r\n  id: number;\r\n  year: number;\r\n  description: string;\r\n}\r\n\r\n// --- 游戏数据 ---\r\nconst historicalEvents: HistoricalEvent[] = [\r\n  { id: 1, year: -221, description: \"秦始皇统一六国，建立秦朝\" },\r\n  { id: 2, year: 618, description: \"唐朝建立\" },\r\n  { id: 3, year: 1271, description: \"忽必烈建立元朝\" },\r\n  { id: 4, year: 1368, description: \"明朝建立\" },\r\n  { id: 5, year: 1644, description: \"清朝建立\" },\r\n  { id: 6, year: 1912, description: \"中华民国成立\" },\r\n  { id: 7, year: 1949, description: \"中华人民共和国成立\" },\r\n  { id: 8, year: 1978, description: \"改革开放开始\" },\r\n];\r\n\r\n// --- 响应式状态 ---\r\nconst events = reactive<HistoricalEvent[]>([]);\r\nconst isSorted = ref(false);\r\nconst feedback = ref(\"\");\r\n\r\n// --- 计算属性 ---\r\nconst sortedEvents = computed(() => {\r\n  return [...historicalEvents].sort((a, b) => a.year - b.year);\r\n});\r\n\r\n// --- 初始化游戏 ---\r\nconst initializeGame = () => {\r\n  // 洗牌算法 (Fisher-Yates Shuffle)\r\n  events.length = 0;\r\n  const shuffled = [...historicalEvents];\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    // 修复：确保数组元素不为undefined\r\n    const temp = shuffled[i];\r\n    if (temp !== undefined && shuffled[j] !== undefined) {\r\n      shuffled[i] = shuffled[j]!;\r\n      shuffled[j] = temp;\r\n    }\r\n  }\r\n  events.push(...shuffled);\r\n  isSorted.value = false;\r\n  feedback.value = \"\";\r\n};\r\n\r\n// --- 拖拽相关 ---\r\nconst dragItem = ref<number | null>(null);\r\nconst touchItem = ref<number | null>(null);\r\n\r\n// 处理鼠标拖拽\r\nconst handleDragStart = (event: DragEvent, index: number) => {\r\n  dragItem.value = index;\r\n  if (event.dataTransfer) {\r\n    event.dataTransfer.effectAllowed = 'move';\r\n    // 在 Firefox 中需要设置 data，否则 drag 事件可能不触发\r\n    event.dataTransfer.setData('text/plain', ''); \r\n  }\r\n};\r\n\r\nconst handleDragOver = (event: DragEvent) => {\r\n  event.preventDefault(); // 允许放置\r\n  if (event.dataTransfer) {\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }\r\n};\r\n\r\nconst handleDrop = (event: DragEvent, targetIndex: number) => {\r\n  event.preventDefault();\r\n  if (dragItem.value === null || dragItem.value === targetIndex) return;\r\n\r\n  // 确保draggedItem存在且索引有效\r\n  const draggedItem = events[dragItem.value!];\r\n  if (draggedItem === undefined) return;\r\n  \r\n  events.splice(dragItem.value!, 1);\r\n  events.splice(targetIndex, 0, draggedItem);\r\n  \r\n  dragItem.value = null; // Reset drag item\r\n};\r\n\r\n// 处理触摸拖拽\r\nconst handleTouchStart = (event: TouchEvent, index: number) => {\r\n  touchItem.value = index;\r\n  // 防止页面滚动\r\n  event.preventDefault();\r\n};\r\n\r\nconst handleTouchMove = (event: TouchEvent) => {\r\n  if (touchItem.value === null) return;\r\n  event.preventDefault();\r\n  \r\n  // 获取当前触摸位置下的元素\r\n  const touch = event.touches[0];\r\n  if (!touch) return;\r\n  \r\n  const element = document.elementFromPoint(touch.clientX, touch.clientY) as HTMLElement;\r\n  \r\n  // 查找最近的事件项元素\r\n  const eventItem = element?.closest('.event-item');\r\n  if (!eventItem) return;\r\n  \r\n  // 获取目标索引\r\n  const targetIndex = parseInt(eventItem.getAttribute('data-index') || '-1');\r\n  if (targetIndex === -1 || targetIndex === touchItem.value) return;\r\n  \r\n  // 移动项目\r\n  const touchedItem = events[touchItem.value];\r\n  if (touchedItem === undefined) return;\r\n  \r\n  events.splice(touchItem.value, 1);\r\n  events.splice(targetIndex, 0, touchedItem);\r\n  \r\n  // 更新当前拖动项的索引\r\n  touchItem.value = targetIndex;\r\n};\r\n\r\nconst handleTouchEnd = () => {\r\n  touchItem.value = null;\r\n};\r\n\r\n// --- 检查排序 ---\r\nconst checkOrder = () => {\r\n  isSorted.value = true;\r\n  let correct = true;\r\n  for (let i = 0; i < events.length; i++) {\r\n    // 修复：确保数组元素存在\r\n    const event = events[i];\r\n    const sortedEvent = sortedEvents.value[i];\r\n    if (event && sortedEvent && event.id !== sortedEvent.id) {\r\n      correct = false;\r\n      break;\r\n    }\r\n  }\r\n  feedback.value = correct ? \"🎉 完全正确！你对历史了如指掌！\" : \"再检查一下哦，有些事件的顺序不对。\";\r\n};\r\n\r\n// --- 重置游戏 ---\r\nconst resetGame = () => {\r\n  initializeGame();\r\n};\r\n\r\n// --- 生命周期钩子 ---\r\nonMounted(() => {\r\n  initializeGame();\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"history-sorter-game\">\r\n    <div class=\"game-header\">\r\n      <h1>历史事件排序 📜</h1>\r\n      <p>请将以下中国历史事件按时间先后顺序（从古至今）进行排序：</p>\r\n    </div>\r\n    <div class=\"game-area\">\r\n      <div class=\"events-container\">\r\n        <div\r\n          v-for=\"(event, index) in events\"\r\n          :key=\"event.id\"\r\n          class=\"event-item\"\r\n          :class=\"{ \r\n            'correct': isSorted && event.id === sortedEvents[index]?.id, \r\n            'incorrect': isSorted && event.id !== sortedEvents[index]?.id,\r\n            'dragging': touchItem === index\r\n          }\"\r\n          :data-index=\"index\"\r\n          draggable=\"true\"\r\n          @dragstart=\"handleDragStart($event, index)\"\r\n          @dragover=\"handleDragOver\"\r\n          @drop=\"handleDrop($event, index)\"\r\n          @touchstart=\"handleTouchStart($event, index)\"\r\n          @touchmove=\"handleTouchMove\"\r\n          @touchend=\"handleTouchEnd\"\r\n        >\r\n          {{ event.description }}\r\n        </div>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <button @click=\"checkOrder\">检查顺序</button>\r\n        <button @click=\"resetGame\">重新开始</button>\r\n      </div>\r\n      <div v-if=\"feedback\" class=\"feedback\">{{ feedback }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.history-sorter-game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.game-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.events-container {\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n\r\n.event-item {\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  cursor: move;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.event-item:hover {\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\r\n}\r\n\r\n.event-item.correct {\r\n  background-color: #d4edda;\r\n  border-color: #c3e6cb;\r\n}\r\n\r\n.event-item.incorrect {\r\n  background-color: #f8d7da;\r\n  border-color: #f5c6cb;\r\n}\r\n\r\n.dragging {\r\n  opacity: 0.5;\r\n  transform: scale(0.98);\r\n}\r\n\r\n.controls {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #42b883;\r\n  color: white;\r\n  transition: background-color 0.3s ease;\r\n  margin: 0 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #35495e;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #cccccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.feedback {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  max-width: 600px;\r\n}\r\n\r\n.feedback.success {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.feedback.error {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\n/* 移动端适配 */\r\n@media (max-width: 768px) {\r\n  .history-sorter-game {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .event-item {\r\n    padding: 12px;\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n    font-size: 14px;\r\n    margin: 5px;\r\n    width: 100%;\r\n    max-width: 200px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .history-sorter-game {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .event-item {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .game-header h1 {\r\n    font-size: 24px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["historicalEvents","events","reactive","isSorted","ref","feedback","sortedEvents","computed","a","b","initializeGame","shuffled","i","j","temp","dragItem","touchItem","handleDragStart","event","index","handleDragOver","handleDrop","targetIndex","draggedItem","handleTouchStart","handleTouchMove","touch","eventItem","touchedItem","handleTouchEnd","checkOrder","correct","sortedEvent","resetGame","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$event","_toDisplayString","_hoisted_4","_hoisted_5"],"mappings":"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"}