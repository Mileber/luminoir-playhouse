{"version":3,"file":"MinesweeperGame-Dvkt8fOa.js","sources":["../../src/components/games/MinesweeperGame.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\n\r\n// --- 游戏配置 ---\r\nconst ROWS = 9;\r\nconst COLS = 9;\r\nconst MINES = 10;\r\n\r\n// --- 类型定义 ---\r\ninterface Cell {\r\n  isMine: boolean;\r\n  isRevealed: boolean;\r\n  isFlagged: boolean;\r\n  neighborMines: number; // 相邻地雷数\r\n}\r\n\r\n// --- 响应式状态 ---\r\nconst board = reactive<Cell[][]>([]);\r\nconst gameOver = ref(false);\r\nconst gameWon = ref(false);\r\nconst firstClick = ref(true);\r\n\r\n// --- 计算属性 ---\r\nconst totalCells = computed(() => ROWS * COLS);\r\nconst revealedCount = computed(() => {\r\n  let count = 0;\r\n  for (let r = 0; r < ROWS; r++) {\r\n    for (let c = 0; c < COLS; c++) {\r\n      // 修复：确保board[r][c]存在\r\n      const row = board[r];\r\n      if (row) {\r\n        const cell = row[c];\r\n        if (cell && cell.isRevealed) count++;\r\n      }\r\n    }\r\n  }\r\n  return count;\r\n});\r\n\r\n// --- 初始化棋盘 ---\r\nconst initializeBoard = () => {\r\n  board.length = 0; // Clear existing board\r\n  for (let r = 0; r < ROWS; r++) {\r\n    const row: Cell[] = [];\r\n    for (let c = 0; c < COLS; c++) {\r\n      row.push({\r\n        isMine: false,\r\n        isRevealed: false,\r\n        isFlagged: false,\r\n        neighborMines: 0\r\n      });\r\n    }\r\n    board.push(row);\r\n  }\r\n  gameOver.value = false;\r\n  gameWon.value = false;\r\n  firstClick.value = true;\r\n};\r\n\r\n// --- 放置地雷 ---\r\nconst placeMines = (firstClickRow: number, firstClickCol: number) => {\r\n  let minesPlaced = 0;\r\n  while (minesPlaced < MINES) {\r\n    const r = Math.floor(Math.random() * ROWS);\r\n    const c = Math.floor(Math.random() * COLS);\r\n    // 确保第一个点击的格子及其周围不是地雷\r\n    const isFirstClickArea =\r\n      Math.abs(r - firstClickRow) <= 1 && Math.abs(c - firstClickCol) <= 1;\r\n    // 修复：确保board[r][c]存在\r\n    const row = board[r];\r\n    if (row) {\r\n      const cell = row[c];\r\n      if (cell && !cell.isMine && !isFirstClickArea) {\r\n        cell.isMine = true;\r\n        minesPlaced++;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// --- 计算相邻地雷数 ---\r\nconst calculateNeighborMines = () => {\r\n  for (let r = 0; r < ROWS; r++) {\r\n    for (let c = 0; c < COLS; c++) {\r\n      // 修复：确保board[r][c]存在\r\n      const row = board[r];\r\n      if (row) {\r\n        const cell = row[c];\r\n        if (cell && !cell.isMine) {\r\n          let count = 0;\r\n          for (let dr = -1; dr <= 1; dr++) {\r\n            for (let dc = -1; dc <= 1; dc++) {\r\n              if (dr === 0 && dc === 0) continue;\r\n              const nr = r + dr;\r\n              const nc = c + dc;\r\n              // 修复：确保board[nr][nc]存在\r\n              if (nr >= 0 && nr < ROWS && nc >= 0 && nc < COLS) {\r\n                const nRow = board[nr];\r\n                if (nRow) {\r\n                  const nCell = nRow[nc];\r\n                  if (nCell && nCell.isMine) {\r\n                    count++;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          cell.neighborMines = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// --- 点击格子 ---\r\nconst revealCell = (r: number, c: number) => {\r\n  // 修复：确保board[r][c]存在\r\n  const row = board[r];\r\n  if (!row) return;\r\n  \r\n  const cell = row[c];\r\n  if (!cell) return;\r\n  \r\n  if (gameOver.value || gameWon.value || cell.isRevealed || cell.isFlagged) return;\r\n\r\n  if (firstClick.value) {\r\n    placeMines(r, c);\r\n    calculateNeighborMines();\r\n    firstClick.value = false;\r\n  }\r\n\r\n  cell.isRevealed = true;\r\n\r\n  if (cell.isMine) {\r\n    gameOver.value = true;\r\n    revealAllMines();\r\n    return;\r\n  }\r\n\r\n  if (cell.neighborMines === 0) {\r\n    // Auto-reveal neighbors if it's an empty cell\r\n    for (let dr = -1; dr <= 1; dr++) {\r\n      for (let dc = -1; dc <= 1; dc++) {\r\n        if (dr === 0 && dc === 0) continue;\r\n        const nr = r + dr;\r\n        const nc = c + dc;\r\n        // 修复：确保board[nr][nc]存在\r\n        if (nr >= 0 && nr < ROWS && nc >= 0 && nc < COLS) {\r\n          const nRow = board[nr];\r\n          if (nRow) {\r\n            const nCell = nRow[nc];\r\n            if (nCell && !nCell.isRevealed && !nCell.isFlagged) {\r\n              revealCell(nr, nc); // Recursive reveal\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkWin();\r\n};\r\n\r\n// --- 揭示所有地雷 (游戏结束时) ---\r\nconst revealAllMines = () => {\r\n  for (let r = 0; r < ROWS; r++) {\r\n    for (let c = 0; c < COLS; c++) {\r\n      // 修复：确保board[r][c]存在\r\n      const row = board[r];\r\n      if (row) {\r\n        const cell = row[c];\r\n        if (cell && cell.isMine) {\r\n          cell.isRevealed = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// --- 检查是否获胜 ---\r\nconst checkWin = () => {\r\n  if (revealedCount.value === totalCells.value - MINES) {\r\n    gameWon.value = true;\r\n    flagAllMines();\r\n  }\r\n};\r\n\r\n// --- 标记所有地雷 (获胜时) ---\r\nconst flagAllMines = () => {\r\n  for (let r = 0; r < ROWS; r++) {\r\n    for (let c = 0; c < COLS; c++) {\r\n      // 修复：确保board[r][c]存在\r\n      const row = board[r];\r\n      if (row) {\r\n        const cell = row[c];\r\n        if (cell && cell.isMine) {\r\n          cell.isFlagged = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// --- 右键标记/取消标记 ---\r\nconst handleRightClick = (event: MouseEvent, r: number, c: number) => {\r\n  event.preventDefault(); // 阻止默认右键菜单\r\n  // 修复：确保board[r][c]存在\r\n  const row = board[r];\r\n  if (!row) return;\r\n  \r\n  const cell = row[c];\r\n  if (!cell) return;\r\n  \r\n  if (gameOver.value || gameWon.value || cell.isRevealed) return;\r\n  cell.isFlagged = !cell.isFlagged;\r\n};\r\n\r\n// --- 触摸事件处理 ---\r\nlet longPressTimer: number | null = null;\r\nlet lastTouchCell: { r: number, c: number } | null = null;\r\n\r\nconst handleTouchStart = (event: TouchEvent, r: number, c: number) => {\r\n  // 防止页面缩放\r\n  if (event.touches.length > 1) {\r\n    event.preventDefault();\r\n  }\r\n  \r\n  lastTouchCell = { r, c };\r\n  \r\n  // 设置长按定时器\r\n  longPressTimer = window.setTimeout(() => {\r\n    // 长按相当于右键点击\r\n    if (lastTouchCell) {\r\n      const { r, c } = lastTouchCell;\r\n      const row = board[r];\r\n      if (!row) return;\r\n      \r\n      const cell = row[c];\r\n      if (!cell) return;\r\n      \r\n      if (gameOver.value || gameWon.value || cell.isRevealed) return;\r\n      cell.isFlagged = !cell.isFlagged;\r\n      \r\n      // 添加触觉反馈（如果设备支持）\r\n      if (window.navigator && window.navigator.vibrate) {\r\n        window.navigator.vibrate(100);\r\n      }\r\n    }\r\n    \r\n    longPressTimer = null;\r\n  }, 500); // 500毫秒长按判定\r\n};\r\n\r\nconst handleTouchEnd = (event: TouchEvent) => {\r\n  // 如果定时器存在，说明不是长按，是普通点击\r\n  if (longPressTimer !== null) {\r\n    clearTimeout(longPressTimer);\r\n    longPressTimer = null;\r\n    \r\n    // 普通点击相当于左键点击，揭示格子\r\n    if (lastTouchCell) {\r\n      const { r, c } = lastTouchCell;\r\n      revealCell(r, c);\r\n    }\r\n  }\r\n  \r\n  lastTouchCell = null;\r\n};\r\n\r\nconst handleTouchMove = (event: TouchEvent) => {\r\n  // 如果手指移动，取消长按\r\n  if (longPressTimer !== null) {\r\n    clearTimeout(longPressTimer);\r\n    longPressTimer = null;\r\n  }\r\n};\r\n\r\n// --- 重置游戏 ---\r\nconst resetGame = () => {\r\n  initializeBoard();\r\n};\r\n\r\n// --- 生命周期钩子 ---\r\nonMounted(() => {\r\n  initializeBoard();\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"minesweeper-game\">\r\n    <h2>扫雷游戏 🧨</h2>\r\n    <div class=\"game-info\">\r\n      <p>地雷数: {{ MINES }}</p>\r\n      <p v-if=\"gameOver\">游戏结束！踩到地雷了。</p>\r\n      <p v-else-if=\"gameWon\">恭喜你，成功排雷！</p>\r\n      <button @click=\"resetGame\">重新开始</button>\r\n      <div class=\"touch-instructions\">\r\n        <p>移动设备操作说明:</p>\r\n        <p>- 点击: 揭示格子</p>\r\n        <p>- 长按: 标记/取消标记地雷</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"board\" :class=\"{ 'game-over': gameOver, 'game-won': gameWon }\">\r\n      <div v-for=\"(row, r) in board\" :key=\"r\" class=\"row\">\r\n        <div\r\n          v-for=\"(cell, c) in row\"\r\n          :key=\"c\"\r\n          class=\"cell\"\r\n          :class=\"{\r\n            revealed: cell.isRevealed,\r\n            mine: cell.isMine && cell.isRevealed,\r\n            flagged: cell.isFlagged,\r\n            [`n${cell.neighborMines}`]: cell.isRevealed && !cell.isMine\r\n          }\"\r\n          @click=\"revealCell(r, c)\"\r\n          @contextmenu=\"handleRightClick($event, r, c)\"\r\n          @touchstart=\"handleTouchStart($event, r, c)\"\r\n          @touchend=\"handleTouchEnd\"\r\n          @touchmove=\"handleTouchMove\"\r\n        >\r\n          <span v-if=\"cell.isFlagged\">🚩</span>\r\n          <span v-else-if=\"cell.isRevealed && cell.isMine\">💣</span>\r\n          <span v-else-if=\"cell.isRevealed && cell.neighborMines > 0\">{{ cell.neighborMines }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.minesweeper-game {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #f0f0f0;\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.game-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.game-info {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.touch-instructions {\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 5px;\r\n  font-size: 0.9em;\r\n  display: none;\r\n}\r\n\r\n/* 在移动设备上显示触摸说明 */\r\n@media (max-width: 768px) {\r\n  .touch-instructions {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.board {\r\n  display: grid;\r\n  grid-template-columns: repeat(9, 30px);\r\n  grid-template-rows: repeat(9, 30px);\r\n  gap: 2px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.cell {\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 1px solid #999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  background-color: #ddd;\r\n}\r\n\r\n.cell:hover {\r\n  background-color: #ccc;\r\n}\r\n\r\n.cell.revealed {\r\n  background-color: #eee;\r\n}\r\n\r\n.cell.mine {\r\n  background-color: #f00;\r\n}\r\n\r\n.controls {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #42b883;\r\n  color: white;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #35495e;\r\n}\r\n\r\n/* 移动端适配 */\r\n@media (max-width: 768px) {\r\n  .board {\r\n    grid-template-columns: repeat(9, 25px);\r\n    grid-template-rows: repeat(9, 25px);\r\n  }\r\n\r\n  .cell {\r\n    width: 25px;\r\n    height: 25px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .board {\r\n    grid-template-columns: repeat(9, 20px);\r\n    grid-template-rows: repeat(9, 20px);\r\n  }\r\n\r\n  .cell {\r\n    width: 20px;\r\n    height: 20px;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .minesweeper-game {\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>\r\n"],"names":["ROWS","COLS","MINES","board","reactive","gameOver","ref","gameWon","firstClick","totalCells","computed","revealedCount","count","r","c","row","cell","initializeBoard","placeMines","firstClickRow","firstClickCol","minesPlaced","isFirstClickArea","calculateNeighborMines","dr","dc","nr","nc","nRow","nCell","revealCell","revealAllMines","checkWin","flagAllMines","handleRightClick","event","longPressTimer","lastTouchCell","handleTouchStart","handleTouchEnd","handleTouchMove","resetGame","onMounted","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_hoisted_2","_toDisplayString","_normalizeClass","_Fragment","_renderList","$event","_hoisted_8"],"mappings":"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"}