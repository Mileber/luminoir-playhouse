{"version":3,"file":"SheepGame-qhJuPgeW.js","sources":["../../src/components/games/SheepGame.vue"],"sourcesContent":["<template>\n  <div class=\"sheep-game\">\n    <div class=\"game-header\">\n      <h1>羊了个羊</h1>\n      <div class=\"game-info\">\n        <div class=\"score\">得分: {{ score }}</div>\n        <button @click=\"resetGame\" class=\"reset-btn\">重新开始</button>\n      </div>\n    </div>\n\n    <div class=\"game-container\">\n      <!-- 游戏主区域 -->\n      <div class=\"game-board\">\n        <div \n          v-for=\"(layer, zIndex) in board\" \n          :key=\"zIndex\" \n          class=\"board-layer\"\n          :style=\"{ zIndex: zIndex }\"\n        >\n          <div\n            v-for=\"(row, y) in layer\"\n            :key=\"y\"\n            class=\"board-row\"\n          >\n            <div\n              v-for=\"(cell, x) in row\"\n              :key=\"x\"\n              class=\"board-cell\"\n              :class=\"{ \n                'has-block': cell !== null, \n                'top-block': isTopBlock(x, y, zIndex),\n                'selected': selectedBlocks.some(b => b.x === x && b.y === y && b.z === zIndex)\n              }\"\n              @click=\"selectBlock(x, y, zIndex)\"\n            >\n              <div v-if=\"cell !== null\" class=\"block\" :class=\"'block-' + cell\">\n                {{ getEmojiForType(cell) }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 底部槽位区域 -->\n      <div class=\"slot-area\">\n        <h3>槽位</h3>\n        <div class=\"slots\">\n          <div \n            v-for=\"(slot, index) in slots\" \n            :key=\"index\" \n            class=\"slot\"\n            :class=\"{ 'filled': slot !== null }\"\n          >\n            <div v-if=\"slot !== null\" class=\"block\" :class=\"'block-' + slot\">\n              {{ getEmojiForType(slot) }}\n            </div>\n          </div>\n        </div>\n        <div class=\"slot-info\">\n          <p>剩余空间: {{ 7 - filledSlots }} / 7</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 游戏状态提示 -->\n    <div v-if=\"gameOver\" class=\"game-over-overlay\">\n      <div class=\"game-over-message\">\n        <h2>{{ gameWin ? '恭喜通关!' : '游戏结束' }}</h2>\n        <p>{{ gameWin ? '你成功消除了所有方块！' : '槽位已满，游戏结束。' }}</p>\n        <button @click=\"resetGame\">再玩一次</button>\n      </div>\n    </div>\n\n    <!-- 移动端操作说明 -->\n    <div class=\"instructions\" v-if=\"isMobile\">\n      <p>点击最上层的方块将其移至底部槽位，三个相同图案可消除</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\n\n// 定义方块类型\nconst BLOCK_TYPES = [\n  '🍓', '🍊', '🍇', '🍉', '🍌', '🍎', '🍑',  // 水果类\n  '🐶', '🐱', '🐭', '🐹', '🐰', '🦊', '🐻',  // 动物类\n  '🚗', '🚕', '🚙', '🚌', '🚎', '🏎', '🚓'   // 交通工具类\n]\n\ntype BoardType = Array<Array<Array<number | null>>>\ntype SlotsType = Array<number | null>\n\n// 游戏状态\nconst board = ref<BoardType>([])\nconst slots = ref<SlotsType>(Array(7).fill(null))\nconst selectedBlocks = ref<Array<{x: number, y: number, z: number}>>([])\nconst score = ref(0)\nconst gameOver = ref(false)\nconst gameWin = ref(false)\n\n// 检测是否为移动端\nconst isMobile = computed(() => {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n})\n\n// 计算已填充的槽位数量\nconst filledSlots = computed(() => {\n  return slots.value.filter(slot => slot !== null).length\n})\n\n// 初始化游戏\nconst initGame = () => {\n  // 创建一个3层的简单关卡\n  const newBoard: BoardType = []\n  \n  // 第一层 - 底层 (3x3)\n  const layer1: Array<Array<number | null>> = []\n  for (let y = 0; y < 3; y++) {\n    const row: Array<number | null> = []\n    for (let x = 0; x < 3; x++) {\n      row.push(Math.floor(Math.random() * BLOCK_TYPES.length))\n    }\n    layer1.push(row)\n  }\n  newBoard.push(layer1)\n  \n  // 第二层 (3x3)，部分覆盖第一层\n  const layer2: Array<Array<number | null>> = []\n  for (let y = 0; y < 3; y++) {\n    const row: Array<number | null> = []\n    for (let x = 0; x < 3; x++) {\n      // 部分方块覆盖下层\n      if (Math.random() > 0.3) {\n        row.push(Math.floor(Math.random() * BLOCK_TYPES.length))\n      } else {\n        row.push(null)\n      }\n    }\n    layer2.push(row)\n  }\n  newBoard.push(layer2)\n  \n  // 第三层 - 顶层 (2x2)，放在中间\n  const layer3: Array<Array<number | null>> = []\n  for (let y = 0; y < 5; y++) {\n    const row: Array<number | null> = []\n    for (let x = 0; x < 5; x++) {\n      // 在中间放置2x2的方块\n      if (y >= 1 && y <= 2 && x >= 1 && x <= 2) {\n        row.push(Math.floor(Math.random() * BLOCK_TYPES.length))\n      } else {\n        row.push(null)\n      }\n    }\n    layer3.push(row)\n  }\n  newBoard.push(layer3)\n  \n  board.value = newBoard\n  slots.value = Array(7).fill(null)\n  selectedBlocks.value = []\n  score.value = 0\n  gameOver.value = false\n  gameWin.value = false\n}\n\n// 判断是否为最上层方块\nconst isTopBlock = (x: number, y: number, z: number): boolean => {\n  // 如果已经是最高层，则总是最上层方块\n  if (z === board.value.length - 1) {\n    return board.value[z]?.[y]?.[x] !== null\n  }\n  \n  // 检查上方层是否有方块覆盖\n  for (let i = z + 1; i < board.value.length; i++) {\n    // 使用可选链操作符安全访问\n    if (board.value[i]?.[y]?.[x] !== undefined && \n        board.value[i]?.[y]?.[x] !== null) {\n      return false\n    }\n  }\n  \n  return board.value[z]?.[y]?.[x] !== null\n}\n\n// 选择方块\nconst selectBlock = (x: number, y: number, z: number) => {\n  // 如果游戏已结束，不能操作\n  if (gameOver.value) return\n  \n  // 只能选择最上层的方块\n  if (!isTopBlock(x, y, z)) return\n  \n  // 检查索引是否有效\n  if (!board.value[z] || !board.value[z][y]) return\n  \n  const blockType = board.value[z][y][x]\n  if (blockType === null) return\n  \n  // 检查槽位是否已满\n  if (filledSlots.value >= 7) {\n    // 槽位满了，检查是否能消除\n    checkElimination()\n    if (filledSlots.value >= 7) {\n      // 仍然满了，游戏结束\n      gameOver.value = true\n      gameWin.value = false\n      return\n    }\n  }\n  \n  // 将方块添加到槽位\n  const emptySlotIndex = slots.value.findIndex(slot => slot === null)\n  if (emptySlotIndex !== -1 && blockType !== null && blockType !== undefined) {\n    slots.value[emptySlotIndex] = blockType\n    \n    // 标记为已选择（视觉效果）\n    selectedBlocks.value.push({x, y, z})\n    \n    // 从游戏板上移除方块\n    if (board.value[z] && board.value[z][y]) {\n      board.value[z][y][x] = null\n    }\n    \n    // 检查是否可以消除\n    checkElimination()\n    \n    // 检查是否获胜\n    checkWinCondition()\n  }\n}\n\n// 检查是否可以消除\nconst checkElimination = () => {\n  // 统计每个类型的方块数量\n  const countMap: { [key: number]: number } = {}\n  \n  slots.value.forEach(slot => {\n    if (slot !== null) {\n      if (countMap[slot]) {\n        countMap[slot]++\n      } else {\n        countMap[slot] = 1\n      }\n    }\n  })\n  \n  // 查找数量大于等于3的类型\n  for (const [type, count] of Object.entries(countMap)) {\n    const typeNum = parseInt(type)\n    if (count >= 3) {\n      // 消除这些方块\n      let removed = 0\n      for (let i = 0; i < slots.value.length && removed < 3; i++) {\n        if (slots.value[i] === typeNum) {\n          slots.value[i] = null\n          removed++\n        }\n      }\n      \n      // 增加分数\n      score.value += 300\n    }\n  }\n}\n\n// 检查胜利条件\nconst checkWinCondition = () => {\n  // 检查游戏板是否为空\n  const isEmpty = board.value.every(layer => \n    layer.every(row => \n      row.every(cell => cell === null)\n    )\n  )\n  \n  if (isEmpty) {\n    gameOver.value = true\n    gameWin.value = true\n  }\n}\n\n// 获取方块类型的emoji\nconst getEmojiForType = (type: number): string => {\n  return BLOCK_TYPES[type] || '🧩'\n}\n\n// 重置游戏\nconst resetGame = () => {\n  initGame()\n}\n\n// 组件挂载时初始化游戏\nonMounted(() => {\n  initGame()\n})\n</script>\n\n<style scoped>\n.sheep-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  max-width: 100%;\n  box-sizing: border-box;\n}\n\n.game-header {\n  width: 100%;\n  max-width: 600px;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.game-header h1 {\n  margin: 0 0 10px 0;\n  color: #333;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.reset-btn {\n  padding: 8px 16px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.reset-btn:hover {\n  background-color: #359c6d;\n}\n\n.game-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n  max-width: 600px;\n}\n\n.game-board {\n  position: relative;\n  background-color: #f0f0f0;\n  border-radius: 8px;\n  padding: 20px;\n  min-height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.board-layer {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n}\n\n.board-row {\n  display: flex;\n}\n\n.board-cell {\n  width: 50px;\n  height: 50px;\n  border: 1px solid #ddd;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: #fafafa;\n}\n\n.board-cell.has-block {\n  background-color: #e6f7ff;\n}\n\n.board-cell.top-block {\n  cursor: pointer;\n  background-color: #d1e8ff;\n}\n\n.board-cell.top-block:hover {\n  background-color: #a3d4ff;\n  transform: scale(1.05);\n}\n\n.board-cell.selected {\n  background-color: #ffcccc;\n}\n\n.block {\n  font-size: 24px;\n  user-select: none;\n}\n\n.slot-area {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n}\n\n.slot-area h3 {\n  margin-top: 0;\n}\n\n.slots {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n  margin: 10px 0;\n}\n\n.slot {\n  width: 50px;\n  height: 50px;\n  border: 2px dashed #ccc;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n}\n\n.slot.filled {\n  border-style: solid;\n  background-color: #e6f7ff;\n}\n\n.slot-info p {\n  margin: 10px 0 0 0;\n  font-size: 14px;\n  color: #666;\n}\n\n.game-over-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.game-over-message {\n  background-color: white;\n  padding: 30px;\n  border-radius: 8px;\n  text-align: center;\n  max-width: 90%;\n}\n\n.game-over-message h2 {\n  margin-top: 0;\n}\n\n.game-over-message button {\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-top: 15px;\n}\n\n.instructions {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #e8f4fd;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 14px;\n  color: #333;\n}\n\n@media (max-width: 600px) {\n  .board-cell {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .block {\n    font-size: 20px;\n  }\n  \n  .slot {\n    width: 40px;\n    height: 40px;\n  }\n}\n</style>"],"names":["BLOCK_TYPES","board","ref","slots","selectedBlocks","score","gameOver","gameWin","isMobile","computed","filledSlots","slot","initGame","newBoard","layer1","y","row","x","layer2","layer3","isTopBlock","z","i","selectBlock","blockType","checkElimination","emptySlotIndex","checkWinCondition","countMap","type","count","typeNum","removed","layer","cell","getEmojiForType","resetGame","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","zIndex","b","_normalizeClass","_toDisplayString","_hoisted_8","_hoisted_9","index","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13"],"mappings":"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"}